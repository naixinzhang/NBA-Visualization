{"version":3,"sources":["assets/images/logo.svg","components/TopBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","React","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerName","playerId","Profile","_this$props$playerInf","props","playerInfo","teamAbbreviation","teamCity","teamName","height","weight","pts","reb","ast","pie","concat","window","d3_hexbin","hexbin","ShotChart","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","update","nba","stats","shots","PlayerID","Season","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","console","log","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","datum","id","CountSlider","state","inputValue","onChange","setState","handleCountSliderChange","row","col","span","slider","min","max","input_number","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","handleChartTypeChange","e","target","handleTooltipChange","ShotChart_ShotChart","CountSlider_CountSlider","_","debounce","es_radio","es_switch","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","_ref","fullName","onSelect","_ref2","loadPlayerInfo","auto_complete","size","onSearch","placeholder","optionLabelProp","input","suffix","icon","type","Main","isLoading","info","assign","commonPlayerInfo","playerHeadlineStats","catch","SearchBar_SearchBar","Profile_Profile","DataViewContainer_DataViewContainer","App","TopBar_TopBar","Main_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3c0c59b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9470e2d5.svg\";","import React from 'react';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nexport class TopBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </header>\r\n    );\r\n  }\r\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\nexport const DEFAULT_PLAYER_INFO={\r\n        playerName:'Stephen Curry',\r\n        playerId: 201939,\r\n}","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nexport class Profile extends React.Component {\r\n render() {\r\n   const {\r\n     teamAbbreviation,\r\n     teamCity,\r\n     teamName,\r\n     playerName,\r\n     height,\r\n     weight,\r\n     playerId,\r\n     pts, reb, ast, pie,\r\n   } = this.props.playerInfo;\r\n   \r\n   return (\r\n     <div className=\"profile\">\r\n       <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n       <img\r\n         className=\"profile-pic\"\r\n         src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n         alt=\"Profile\"\r\n       />\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Team</div>\r\n         <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n       </div>\r\n       <img\r\n         className=\"team-logo\"\r\n         src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n         alt=\"Team\"\r\n       />\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Height</div>\r\n         <div className=\"profile-entry-right\">{`${height}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Weight</div>\r\n         <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">PTS</div>\r\n         <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">REB</div>\r\n         <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">AST</div>\r\n         <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">PIE</div>\r\n         <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n}\r\n","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n static propTypes = {\r\n   playerId: PropTypes.number.isRequired,\r\n   minCount: PropTypes.number,\r\n   chartType: PropTypes.string,\r\n   displayTooltip: PropTypes.bool,\r\n }\r\n\r\n componentDidMount() {\r\n  this.update();\r\n}\r\n\r\ncomponentDidUpdate() {\r\n  this.update();\r\n}\r\n\r\nupdate = () => {\r\n   nba.stats.shots({\r\n     PlayerID: this.props.playerId,\r\n     Season:\"2017-18\"\r\n   }).then((response) => {\r\n     const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n       x: (shot.locX + 250) / 10,\r\n       y: (shot.locY + 50) / 10,\r\n       action_type: shot.actionType,\r\n       shot_distance: shot.shotDistance,\r\n       shot_made_flag: shot.shotMadeFlag,\r\n     }));\r\n     \r\n     console.log(final_shots);\r\n     const courtSelection = d3.select(\"#shot-chart\");\r\n     courtSelection.html('');\r\n     const chart_court = court().width(500);\r\n     const chart_shots = \r\n      shots()\r\n        .shotRenderThreshold(this.props.minCount)\r\n        .displayToolTips(this.props.displayTooltip)\r\n        .displayType(this.props.chartType);\r\n     courtSelection.call(chart_court);\r\n     courtSelection.datum(final_shots).call(chart_shots);\r\n   });\r\n }\r\n render() {\r\n   return (\r\n       <div id=\"shot-chart\"></div>\r\n   );\r\n }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Slider, InputNumber, Row, Col,\r\n  } from 'antd';\r\n  \r\n  export class CountSlider extends React.Component {\r\n    state = {\r\n      inputValue: 1,\r\n    }\r\n  \r\n    onChange = (value) => {\r\n      this.setState({\r\n        inputValue: value,\r\n      });\r\n      this.props.handleCountSliderChange(value);\r\n    }\r\n  \r\n    render() {\r\n      const { inputValue } = this.state;\r\n      return (\r\n        <Row>\r\n          <Col span={12}>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              onChange={this.onChange}\r\n              value={typeof inputValue === 'number' ? inputValue : 0}\r\n            />\r\n          </Col>\r\n          <Col span={4}>\r\n            <InputNumber\r\n              min={1}\r\n              max={20}\r\n              style={{ marginLeft: 16 }}\r\n              value={inputValue}\r\n              onChange={this.onChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n\r\n  ","import React from 'react';\r\nimport { ShotChart } from './ShotChart';\r\nimport { CountSlider } from './CountSlider';\r\nimport { Radio, Switch, Row, Col } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class DataViewContainer extends React.Component {\r\n  state = {\r\n    minCount: 2,\r\n    chartType: 'hexbin',\r\n    displayTooltip: true,\r\n  }\r\n  handleCountSliderChange = (count) => {\r\n    this.setState({ minCount: count });\r\n  }\r\n  handleChartTypeChange = (e) => {\r\n    this.setState({ chartType: e.target.value });\r\n  }\r\n  handleTooltipChange = (displayTooltip) => {\r\n    this.setState({ displayTooltip });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"data-view\">\r\n        <ShotChart \r\n          playerId={this.props.playerId} \r\n          minCount={this.state.minCount} \r\n          chartType={this.state.chartType}\r\n          displayTooltip={this.state.displayTooltip}\r\n        />\r\n        <div className=\"filters\">\r\n          {this.state.chartType === 'hexbin' ? \r\n          <CountSlider handleCountSliderChange={_.debounce(this.handleCountSliderChange, 500)}/> : null}\r\n          <Row>\r\n            <Col span={9}>\r\n              <RadioGroup onChange={this.handleChartTypeChange} value={this.state.chartType}>\r\n                <Radio value=\"hexbin\">Hexbin</Radio>\r\n                <Radio value=\"scatter\">Scatter</Radio>\r\n              </RadioGroup>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Switch \r\n                checkedChildren=\"On\" \r\n                unCheckedChildren=\"Off\" \r\n                defaultChecked \r\n                onChange={this.handleTooltipChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { AutoComplete, Input, Icon } from 'antd';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\nimport nba from 'nba';\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nwindow.nba = nba;\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        this.setState({\r\n            dataSource: !value ? [] : nba.searchPlayers(value).map(\r\n                ({ fullName, playerId }) => (\r\n                    <Option key={playerId} value={fullName}>\r\n                        <img\r\n                            className=\"player-option-image\"\r\n                            src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                            alt={fullName}\r\n                        />\r\n                        <span className=\"player-option-label\">{fullName}</span>\r\n                    </Option>\r\n                )\r\n            )\r\n        });\r\n    }\r\n\r\n    onSelect = (value, {key: playerId}) => {\r\n        console.log('onSelect', value, playerId);\r\n        this.props.loadPlayerInfo(playerId);\r\n    }\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n            <AutoComplete\r\n                dataSource={dataSource}\r\n                className=\"search-bar\"\r\n                size=\"large\"\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n                placeholder=\"Search NBA Player\"\r\n                optionLabelProp=\"value\"\r\n            >\r\n                <Input suffix={<Icon type=\"search\" />} />\r\n            </AutoComplete>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Profile } from './Profile';\r\nimport { DataViewContainer } from './DataViewContainer';\r\nimport { SearchBar } from './SearchBar';\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\nimport nba from 'nba';\r\n\r\nexport class Main extends React.Component {\r\n    state = {\r\n        isLoading: false,\r\n        playerInfo: DEFAULT_PLAYER_INFO\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerInfo(this.state.playerInfo.playerId);\r\n    }\r\n\r\n    loadPlayerInfo = (playerId) => {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        nba.stats.playerInfo({ PlayerID: playerId })\r\n            .then((info) => {\r\n                const playerInfo = Object.assign({},\r\n                    info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n                console.log(\"final player info\", playerInfo);\r\n                this.setState({ playerInfo, isLoading: false });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                this.setState({isLoading: false})\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SearchBar loadPlayerInfo={this.loadPlayerInfo} />\r\n                {\r\n                    this.state.isLoading ? \"Loading...\" : (\r\n                        <div className=\"player\">\r\n                            <Profile playerInfo={this.state.playerInfo} />\r\n                            <DataViewContainer playerId={this.state.playerInfo.playerId} />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { TopBar}  from './TopBar'\nimport { Main } from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}